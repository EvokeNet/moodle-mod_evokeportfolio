{"version":3,"sources":["../src/addcomment.js"],"names":["define","$","Ajax","Swal","AddComment","registerEventListeners","prototype","keypress","event","keycode","keyCode","which","preventDefault","target","currentTarget","saveComment","html","bind","click","closest","children","postinput","value","postdiv","empty","length","showToast","id","data","request","call","methodname","args","comment","submissionid","message","done","addCommentToPost","fail","error","type","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","userimg","find","clone","userfullname","attr","loadallcomments","append","insertBefore"],"mappings":"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","sourcesContent":["/**\n * Add comment js logic.\n *\n * @package    mod_evokeportfolio\n * @copyright  2021 World Bank Group <https://worldbank.org>\n * @author     Willian Mano <willianmanoaraujo@gmail.com>\n */\n\ndefine(['jquery', 'core/ajax', 'mod_evokeportfolio/sweetalert'], function($, Ajax, Swal) {\n    var AddComment = function() {\n        this.registerEventListeners();\n    };\n\n    AddComment.prototype.registerEventListeners = function() {\n        $(\".post-comment-input\").keypress(function(event) {\n            var keycode = (event.keyCode ? event.keyCode : event.which);\n\n            if (keycode === 13) {\n                event.preventDefault();\n\n                var target = $(event.currentTarget);\n\n                this.saveComment(target, target.html());\n            }\n        }.bind(this));\n\n        $(\".post-comment-btn\").click(function(event) {\n            var target = $(event.currentTarget).closest('.input-group').children('.post-comment-input');\n\n            this.saveComment(target, target.html());\n        }.bind(this));\n    };\n\n    AddComment.prototype.saveComment = function(postinput, value) {\n        if (value === '') {\n            return;\n        }\n\n        var postdiv = postinput.closest('.mainpost');\n\n        postinput.empty();\n\n        if (postdiv.length === 0 || postdiv.length > 1) {\n            this.showToast('error', 'Error trying to find the discussion for this comment.');\n\n            return;\n        }\n\n        var id = postdiv.data('id');\n\n        var request = Ajax.call([{\n            methodname: 'mod_evokeportfolio_addcomment',\n            args: {\n                comment: {\n                    submissionid: id,\n                    message: value,\n                }\n            }\n        }]);\n\n        request[0].done(function(data) {\n            this.addCommentToPost(postdiv, data.message);\n        }.bind(this)).fail(function(error) {\n            var message = error.message;\n\n            if (!message) {\n                message = error.error;\n            }\n\n            this.showToast('error', message);\n        }.bind(this));\n    };\n\n    AddComment.prototype.showToast = function(type, message) {\n        var Toast = Swal.mixin({\n            toast: true,\n            position: 'top-end',\n            showConfirmButton: false,\n            timer: 8000,\n            timerProgressBar: true,\n            onOpen: (toast) => {\n                toast.addEventListener('mouseenter', Swal.stopTimer);\n                toast.addEventListener('mouseleave', Swal.resumeTimer);\n            }\n        });\n\n        Toast.fire({\n            icon: type,\n            title: message\n        });\n    };\n\n    AddComment.prototype.addCommentToPost = function(postdiv, value) {\n        var userimg = postdiv.find('.add-comment .userimg').clone();\n        var userfullname = userimg.attr('alt');\n        var loadallcomments = postdiv.find('.loadmore');\n\n        var comment = $(\"<div class='submissioncomment fadeIn'>\" +\n          \"<div class='userimg'>\" + $('<div/>').append(userimg).html() + \"</div>\" +\n          \"<div class='entry'><div class='entry-content'>\" +\n          \"<p class='name'>\" + userfullname + \"</p>\" +\n          \"<p class='text'>\" + value + \"</p>\" +\n          \"</div></div></div>\");\n\n        if (loadallcomments.length > 0) {\n            comment.insertBefore(loadallcomments);\n        } else {\n            comment.insertBefore(postdiv.find('.add-comment'));\n        }\n    };\n\n    return {\n        'init': function() {\n            return new AddComment();\n        }\n    };\n});\n"],"file":"addcomment.min.js"}