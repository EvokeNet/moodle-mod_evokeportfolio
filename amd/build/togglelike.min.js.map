{"version":3,"sources":["../src/togglelike.js"],"names":["define","$","Ajax","Swal","ToggleLike","registerEventListeners","prototype","click","event","postdiv","currentTarget","closest","length","showToast","id","data","request","call","methodname","args","submissionid","reactionid","done","statusdiv","find","likebutton","empty","toggleClass","message","html","bind","fail","error","saveComment","postinput","value","comment","addCommentToPost","type","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","userimg","clone","userfullname","attr","loadallcomments","append","insertBefore"],"mappings":"AASAA,OAAM,iCAAC,CAAC,QAAD,CAAW,WAAX,CAAwB,+BAAxB,CAAD,CAA2D,SAASC,CAAT,CAAYC,CAAZ,CAAkBC,CAAlB,CAAwB,CACrF,GAAIC,CAAAA,CAAU,CAAG,UAAW,CACxB,KAAKC,sBAAL,EACH,CAFD,CAIAD,CAAU,CAACE,SAAX,CAAqBD,sBAArB,CAA8C,UAAW,CACrDJ,CAAC,CAAC,aAAD,CAAD,CAAiBM,KAAjB,CAAuB,SAASC,CAAT,CAAgB,CACnC,GAAIC,CAAAA,CAAO,CAAGR,CAAC,CAACO,CAAK,CAACE,aAAP,CAAD,CAAuBC,OAAvB,CAA+B,WAA/B,CAAd,CAEA,GAAuB,CAAnB,GAAAF,CAAO,CAACG,MAAR,EAAyC,CAAjB,CAAAH,CAAO,CAACG,MAApC,CAAgD,CAC5C,KAAKC,SAAL,CAAe,OAAf,CAAwB,uDAAxB,EAEA,MACH,CAPkC,GAS/BC,CAAAA,CAAE,CAAGL,CAAO,CAACM,IAAR,CAAa,IAAb,CAT0B,CAW/BC,CAAO,CAAGd,CAAI,CAACe,IAAL,CAAU,CAAC,CACrBC,UAAU,CAAE,mCADS,CAErBC,IAAI,CAAE,CACFC,YAAY,CAAEN,CADZ,CAEFO,UAAU,CAAE,CAFV,CAFe,CAAD,CAAV,CAXqB,CAmBnCL,CAAO,CAAC,CAAD,CAAP,CAAWM,IAAX,CAAgB,SAASP,CAAT,CAAe,IAEvBQ,CAAAA,CAAS,CAAGd,CAAO,CAACe,IAAR,CAAa,oBAAb,CAFW,CAGvBC,CAAU,CAAGhB,CAAO,CAACe,IAAR,CAAa,sBAAb,CAHU,CAK3BD,CAAS,CAACG,KAAV,GAEAD,CAAU,CAACE,WAAX,CAAuB,YAAvB,EAEA,GAAI,IAAAZ,CAAI,CAACa,OAAL,EAAyC,OAAhB,EAAAb,CAAI,CAACa,OAAlC,CAAsD,CAClD,MACH,CAEDL,CAAS,CAACM,IAAV,CAAe,qCAAqCd,CAAI,CAACa,OAAzD,CACH,CAde,CAcdE,IAdc,CAcT,IAdS,CAAhB,EAccC,IAdd,CAcmB,SAASC,CAAT,CAAgB,CAC/B,GAAIJ,CAAAA,CAAO,CAAGI,CAAK,CAACJ,OAApB,CAEA,GAAI,CAACA,CAAL,CAAc,CACVA,CAAO,CAAGI,CAAK,CAACA,KACnB,CAED,KAAKnB,SAAL,CAAe,OAAf,CAAwBe,CAAxB,CACH,CARkB,CAQjBE,IARiB,CAQZ,IARY,CAdnB,CAuBH,CA1CD,CA2CH,CA5CD,CA8CA1B,CAAU,CAACE,SAAX,CAAqB2B,WAArB,CAAmC,SAASC,CAAT,CAAoBC,CAApB,CAA2B,CAC1D,GAAc,EAAV,GAAAA,CAAJ,CAAkB,CACd,MACH,CAED,GAAI1B,CAAAA,CAAO,CAAGyB,CAAS,CAACvB,OAAV,CAAkB,WAAlB,CAAd,CAEAuB,CAAS,CAACR,KAAV,GAEA,GAAuB,CAAnB,GAAAjB,CAAO,CAACG,MAAR,EAAyC,CAAjB,CAAAH,CAAO,CAACG,MAApC,CAAgD,CAC5C,KAAKC,SAAL,CAAe,OAAf,CAAwB,uDAAxB,EAEA,MACH,CAbyD,GAetDC,CAAAA,CAAE,CAAGL,CAAO,CAACM,IAAR,CAAa,IAAb,CAfiD,CAiBtDC,CAAO,CAAGd,CAAI,CAACe,IAAL,CAAU,CAAC,CACrBC,UAAU,CAAE,+BADS,CAErBC,IAAI,CAAE,CACFiB,OAAO,CAAE,CACLhB,YAAY,CAAEN,CADT,CAELc,OAAO,CAAEO,CAFJ,CADP,CAFe,CAAD,CAAV,CAjB4C,CA2B1DnB,CAAO,CAAC,CAAD,CAAP,CAAWM,IAAX,CAAgB,SAASP,CAAT,CAAe,CAC3B,KAAKsB,gBAAL,CAAsB5B,CAAtB,CAA+BM,CAAI,CAACa,OAApC,CACH,CAFe,CAEdE,IAFc,CAET,IAFS,CAAhB,EAEcC,IAFd,CAEmB,SAASC,CAAT,CAAgB,CAC/B,GAAIJ,CAAAA,CAAO,CAAGI,CAAK,CAACJ,OAApB,CAEA,GAAI,CAACA,CAAL,CAAc,CACVA,CAAO,CAAGI,CAAK,CAACA,KACnB,CAED,KAAKnB,SAAL,CAAe,OAAf,CAAwBe,CAAxB,CACH,CARkB,CAQjBE,IARiB,CAQZ,IARY,CAFnB,CAWH,CAtCD,CAwCA1B,CAAU,CAACE,SAAX,CAAqBO,SAArB,CAAiC,SAASyB,CAAT,CAAeV,CAAf,CAAwB,CACrD,GAAIW,CAAAA,CAAK,CAAGpC,CAAI,CAACqC,KAAL,CAAW,CACnBC,KAAK,GADc,CAEnBC,QAAQ,CAAE,SAFS,CAGnBC,iBAAiB,GAHE,CAInBC,KAAK,CAAE,GAJY,CAKnBC,gBAAgB,GALG,CAMnBC,MAAM,CAAE,gBAACL,CAAD,CAAW,CACfA,CAAK,CAACM,gBAAN,CAAuB,YAAvB,CAAqC5C,CAAI,CAAC6C,SAA1C,EACAP,CAAK,CAACM,gBAAN,CAAuB,YAAvB,CAAqC5C,CAAI,CAAC8C,WAA1C,CACH,CATkB,CAAX,CAAZ,CAYAV,CAAK,CAACW,IAAN,CAAW,CACPC,IAAI,CAAEb,CADC,CAEPc,KAAK,CAAExB,CAFA,CAAX,CAIH,CAjBD,CAmBAxB,CAAU,CAACE,SAAX,CAAqB+B,gBAArB,CAAwC,SAAS5B,CAAT,CAAkB0B,CAAlB,CAAyB,IACzDkB,CAAAA,CAAO,CAAG5C,CAAO,CAACe,IAAR,CAAa,uBAAb,EAAsC8B,KAAtC,EAD+C,CAEzDC,CAAY,CAAGF,CAAO,CAACG,IAAR,CAAa,KAAb,CAF0C,CAGzDC,CAAe,CAAGhD,CAAO,CAACe,IAAR,CAAa,WAAb,CAHuC,CAKzDY,CAAO,CAAGnC,CAAC,CAAC,8DACYA,CAAC,CAAC,QAAD,CAAD,CAAYyD,MAAZ,CAAmBL,CAAnB,EAA4BxB,IAA5B,EADZ,wEAGO0B,CAHP,wBAIOpB,CAJP,yBAAD,CAL8C,CAY7D,GAA6B,CAAzB,CAAAsB,CAAe,CAAC7C,MAApB,CAAgC,CAC5BwB,CAAO,CAACuB,YAAR,CAAqBF,CAArB,CACH,CAFD,IAEO,CACHrB,CAAO,CAACuB,YAAR,CAAqBlD,CAAO,CAACe,IAAR,CAAa,cAAb,CAArB,CACH,CACJ,CAjBD,CAmBA,MAAO,CACH,KAAQ,eAAW,CACf,MAAO,IAAIpB,CAAAA,CACd,CAHE,CAKV,CAtIK,CAAN","sourcesContent":["/**\n * Add comment js logic.\n *\n * @package    mod_evokeportfolio\n * @copyright  2021 World Bank Group <https://worldbank.org>\n * @author     Willian Mano <willianmanoaraujo@gmail.com>\n */\n\n/* eslint-disable no-console */\ndefine(['jquery', 'core/ajax', 'mod_evokeportfolio/sweetalert'], function($, Ajax, Swal) {\n    var ToggleLike = function() {\n        this.registerEventListeners();\n    };\n\n    ToggleLike.prototype.registerEventListeners = function() {\n        $(\".likebutton\").click(function(event) {\n            var postdiv = $(event.currentTarget).closest('.mainpost');\n\n            if (postdiv.length === 0 || postdiv.length > 1) {\n                this.showToast('error', 'Error trying to find the discussion for this comment.');\n\n                return;\n            }\n\n            var id = postdiv.data('id');\n\n            var request = Ajax.call([{\n                methodname: 'mod_evokeportfolio_togglereaction',\n                args: {\n                    submissionid: id,\n                    reactionid: 1\n                }\n            }]);\n\n            request[0].done(function(data) {\n\n                var statusdiv = postdiv.find('.reactions .status');\n                var likebutton = postdiv.find('.actions .likebutton');\n\n                statusdiv.empty();\n\n                likebutton.toggleClass('hasreacted');\n\n                if (data.message == false || data.message == 'false') {\n                    return;\n                }\n\n                statusdiv.html('<i class=\"fa fa-thumbs-up\"></i> ' + data.message);\n            }.bind(this)).fail(function(error) {\n                var message = error.message;\n\n                if (!message) {\n                    message = error.error;\n                }\n\n                this.showToast('error', message);\n            }.bind(this));\n        });\n    };\n\n    ToggleLike.prototype.saveComment = function(postinput, value) {\n        if (value === '') {\n            return;\n        }\n\n        var postdiv = postinput.closest('.mainpost');\n\n        postinput.empty();\n\n        if (postdiv.length === 0 || postdiv.length > 1) {\n            this.showToast('error', 'Error trying to find the discussion for this comment.');\n\n            return;\n        }\n\n        var id = postdiv.data('id');\n\n        var request = Ajax.call([{\n            methodname: 'mod_evokeportfolio_addcomment',\n            args: {\n                comment: {\n                    submissionid: id,\n                    message: value,\n                }\n            }\n        }]);\n\n        request[0].done(function(data) {\n            this.addCommentToPost(postdiv, data.message);\n        }.bind(this)).fail(function(error) {\n            var message = error.message;\n\n            if (!message) {\n                message = error.error;\n            }\n\n            this.showToast('error', message);\n        }.bind(this));\n    };\n\n    ToggleLike.prototype.showToast = function(type, message) {\n        var Toast = Swal.mixin({\n            toast: true,\n            position: 'top-end',\n            showConfirmButton: false,\n            timer: 8000,\n            timerProgressBar: true,\n            onOpen: (toast) => {\n                toast.addEventListener('mouseenter', Swal.stopTimer);\n                toast.addEventListener('mouseleave', Swal.resumeTimer);\n            }\n        });\n\n        Toast.fire({\n            icon: type,\n            title: message\n        });\n    };\n\n    ToggleLike.prototype.addCommentToPost = function(postdiv, value) {\n        var userimg = postdiv.find('.add-comment .userimg').clone();\n        var userfullname = userimg.attr('alt');\n        var loadallcomments = postdiv.find('.loadmore');\n\n        var comment = $(\"<div class='submissioncomment fadeIn'>\" +\n          \"<div class='userimg'>\" + $('<div/>').append(userimg).html() + \"</div>\" +\n          \"<div class='entry'><div class='entry-content'>\" +\n          \"<p class='name'>\" + userfullname + \"</p>\" +\n          \"<p class='text'>\" + value + \"</p>\" +\n          \"</div></div></div>\");\n\n        if (loadallcomments.length > 0) {\n            comment.insertBefore(loadallcomments);\n        } else {\n            comment.insertBefore(postdiv.find('.add-comment'));\n        }\n    };\n\n    return {\n        'init': function() {\n            return new ToggleLike();\n        }\n    };\n});\n"],"file":"togglelike.min.js"}